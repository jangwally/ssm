<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.loe.dao.CommentMapper">
  <resultMap id="BaseResultMap" type="com.loe.entity.Comment">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="createdate" jdbcType="DATE" property="createdate" />
    <result column="ip" jdbcType="VARCHAR" property="ip" />
    <result column="newsId" jdbcType="INTEGER" property="newsid" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.loe.entity.Comment">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Base_Column_List">
    id, createdate, ip, newsId, user_id
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from news_comment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from news_comment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.loe.entity.Comment">
    insert into news_comment (id, createdate, ip, 
      newsId, user_id, content
      )
    values (#{id,jdbcType=INTEGER}, #{createdate,jdbcType=DATE}, #{ip,jdbcType=VARCHAR}, 
      #{newsid,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.loe.entity.Comment">
    insert into news_comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="createdate != null">
        createdate,
      </if>
      <if test="ip != null">
        ip,
      </if>
      <if test="newsid != null">
        newsId,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="createdate != null">
        #{createdate,jdbcType=DATE},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="newsid != null">
        #{newsid,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.loe.entity.Comment">
    update news_comment
    <set>
      <if test="createdate != null">
        createdate = #{createdate,jdbcType=DATE},
      </if>
      <if test="ip != null">
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="newsid != null">
        newsId = #{newsid,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.loe.entity.Comment">
    update news_comment
    set createdate = #{createdate,jdbcType=DATE},
      ip = #{ip,jdbcType=VARCHAR},
      newsId = #{newsid,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.loe.entity.Comment">
    update news_comment
    set createdate = #{createdate,jdbcType=DATE},
      ip = #{ip,jdbcType=VARCHAR},
      newsId = #{newsid,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>